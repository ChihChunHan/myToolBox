@mixin font($z:1,$w:4) {
  @if (empty(unit($z))) { font-size: #{$z}rem; } 
  @else { font-size: $z; }
  font-weight: $w * 100;
}

@mixin size($width,$height:$width) {
  width: $width;
  height: $height;
}

@mixin flex_center_center {
  display: flex;
  justify-content: center;
  align-items: center;
}




//// css selector ////

// nth-of-type
@mixin nth($nth) {
  @if $nth == 1 {
    &:first-of-type { @content; }
  } @else if $nth == -1 {
    &:last-of-type { @content; }
  } @else {
    &:nth-of-type(#{$nth}) { @content; }
  }
}



//// rwd ////

// rwd breakpoints
@mixin rwd($setpoint) {
  @if $media_first == mobile {
    @media (min-width: rwdGetMap($setpoint,breakpoints) ) {
      @content;
    }
  } @else {
    @media (max-width: rwdGetMap($setpoint,breakpoints) ) {
      @content;
    }
  }
};


//// margin & padding ////

@mixin margin($direction,$level) {
  @if (empty(unit($level))) { @include margin_and_padding_generator($direction,$level,$spacing,'margin')} 
  @else { @include margin_and_padding_generator($direction,1,$level,'margin') }
}
@mixin padding($direction,$level) {
  @if (empty(unit($level))) { @include margin_and_padding_generator($direction,$level,$spacing,'padding')} 
  @else { @include margin_and_padding_generator($direction,1,$level,'padding') }
}

// margin & padding css generator
@mixin margin_and_padding_generator($direction,$level,$length,$style){
  @if $direction == x {
    #{$style}-left: switch_value($level,$length);
    #{$style}-right: switch_value($level,$length);

  } @else if $direction == y {
    #{$style}-top: switch_value($level,$length);
    #{$style}-bottom: switch_value($level,$length);
    
  } @else {
    #{style_and_direction($style,$direction)}: switch_value($level,$length);
  }
};

// deal with style string
@function add_dash($direction){
  @if $direction != ""{ @return -$direction;}
  @else { @return "";}
}
@function style_and_direction ($style,$direction:"") {
  @return #{$style}#{add_dash($direction)};
}

// deal with style value
@function switch_value($level,$length){
  @if $level == 0 { @return 0; }
  @else if $level == auto { @return auto; }
  @else { @return $length * $level; }
};


