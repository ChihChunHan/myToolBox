
// container

.container {
  margin-left: auto;
  margin-right: auto;
  
  // grid_style float/flex
  @if $grid_style == float {  // float
    &::after {
      content: "";
      display: block;
      clear: both;
    }
  } @else {  // flex
    display: flex;
    flex-wrap: wrap;
  }

  // max-width rwd
  @if $media_first == mobile {  // mobile first
    max-width: 100%; 

    @for $i from 1 through 4 {
      @include rwd(nth($media_list,$i)){
        max-width: rwd_get_map(nth($media_list,$i),container);
      }
    }

  } @else {   // pc first
    max-width: rwd_get_map(xl, container); 

    @for $i from 1 through 3 {
      @include rwd(nth($media_list,$i)){
        max-width: rwd_get_map(nth($media_list,$i+1),container);
      }
    }
    @include rwd(sm) {
      max-width: 100%;
    }
  }

}

// columns

@mixin col($col) {
  @if $grid_style == float {  // float
    width: calc( #{100% / $columns * $col} - #{$gutter} );
    float: left;
  } @else {  // flex
    flex-basis: calc( #{100% / $columns * $col} - #{$gutter} );
  }
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
}

@for $col from 1 through $columns {
  .col-#{$col} {
    @include col($col);
  }
}

@each $key in $media_list {
  @include rwd($key) {
    @for $col from 1 through $columns {
      .#{$key}\:col-#{$col} {
        @if $grid_style == float {  // float
          width: calc( #{100% / $columns * $col} - #{$gutter} );
        } @else {  // flex
          flex-basis: calc( #{100% / $columns * $col} - #{$gutter} );
        }
      }
    }
  }
}
