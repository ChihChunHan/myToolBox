// @apply 2.0

@mixin apply($us_string){
  $u_list:str_slice_by_blink($us_string);
  @each $u in $u_list {
    @extend #{string_handler($u)};
  }
};

@function str_slice_by_blink($str) {
  $list: ();
  @while get_blink($str) != null {
    $list: append($list, get_first_str($str));
    $str: get_rest_str($str);
  }
  $list: append($list, $str);
  @return $list;
}
@function get_blink($str) {
  @return str_index($str, " ");
}
@function get_first_str($str) {
  @return str_slice($str, 1, (get_blink($str) - 1));
}
@function get_rest_str($str) {
  @return str_slice($str, (get_blink($str) + 1));
}


@function string_handler($string) {
  $new_string : add_dot(add_EC($string));
  @return $new_string
};

@function add_EC($string){
  $id : str-index($string, ":");
  @if $id == null {@return $string}
  $new_string : str-insert($string, "\\", $id);
  @return $new_string
};

@function add_dot($string){
  $new_string : str-insert($string, ".", 0);
  @return $new_string
};

// utilities

// display
@mixin display {
  &-inline{ display: inline; }
  &-block{ display: block; }
  &-inline-block{ display: inline-block; }
  &-flex{ display: flex; }
  &-none{ display: none; }
}

@mixin g-d {
  .d { 
    @include display ;
    @each $key in $media_list {
      @include rwd($key) {
        @at-root .#{$key}\:{
          &d {
            @include display ;
          }      
        }
      }
    }
  }
}

// flex

@mixin flex-direction {
  &-row { flex-direction: row; }
  &-row-reverse { flex-direction: row-reverse; }
  &-col { flex-direction: column; }
  &-col-reverse { flex-direction: column-reverse; }
}
@mixin justify-content {
  &-start { justify-content: flex-start; }
  &-center { justify-content: center; }
  &-end { justify-content: flex-end; }
  &-between { justify-content: space-between; }
  &-around { justify-content: space-around; }
}
@mixin align-items {
  &-start { align-items: flex-start; }
  &-center { align-items: center; }
  &-end { align-items: flex-end; }
  &-stretch { align-items: stretch; }
}

@mixin align-self {
  &-start { align-self: flex-start; }
  &-center { align-self: center; }
  &-end { align-self: flex-end; }
  &-stretch { align-self: stretch; }
}

@mixin flex-wrap {
  &-no-wrap { flex-wrap: nowrap; }
  &-wrap { flex-wrap: wrap; }
  &-wrap-reverse { flex-wrap: wrap-reverse; }
}

@mixin order {
  &-first { order: -9999; }
  &-last { order: 9999; }
  &-none { order: 0; }
  @for $i from 1 to 12 {
    &-#{$i} { order: $i; }
  }
}

@mixin g-flex {
  .flex { 
    @include flex-direction;
    @include flex-wrap;
    &-center-center { @include flex-center-center;}
  }
  .justify { @include justify-content }
  .items { @include align-items }
  .self { @include align-self }
  .order { @include order }

  @each $key in $media_list {
    @include rwd($key) {
      @at-root .#{$key}\:{
        &flex { 
          @include flex-direction;
          @include flex-wrap;
          &-center-center { @include flex-center-center;}
        }
        &justify { @include justify-content }
        &items { @include align-items }
        &self { @include align-self }
        &order { @include order }
      }
    }
  }
}

// float

@mixin float{
  &-left{ float: left; };
  &-right{ float: right; };
  &-none{ float: none; };
  &-fix {
    &::after{
      content: "";
      display: block;
      clear: both;
    }
  };
}

@mixin g-float {
  .float { @include float ;}

  @each $key in $media_list {
    @include rwd($key) {
      @at-root .#{$key}\:{
        &float {
          @include float;
        }    
      }
    }
  }
}

// textalign

@mixin text {
  &-left { text-align: left; }
  &-center { text-align: center; }
  &-right { text-align: right;}
}

@mixin g-text {
  .text { @include text ;}

  @each $key in $media_list {
    @include rwd($key) {
      @at-root .#{$key}\:{
        &text {
          @include text;
        }    
      }
    }
  }
}

// max-width

@mixin max-width{
  &-n { max-width: none; };
  &-100 { max-width: 100% } ;
  &-90 { max-width: 90% } ;
}

@mixin g-max-w {
  .max-w { @include max-width ;}

  @each $key in $media_list {
    @include rwd($key) {
      @at-root .#{$key}\:{
        &max-w { @include max-width ;}
      }
    }
  }
}

// size
@mixin size-100($str) {
  &-100 { #{$str}: 100%; }
}

@mixin g-size {
  .h { @include size-100(height) }
  .w { @include size-100(width) }

  @each $key in $media_list {
    @include rwd($key) {
      @at-root .#{$key}\:{
        &h { @include size-100(height) }
        &w { @include size-100(width) }
      }
    }
  }
}

// margin & padding
// @mixin margin-($string) {
//   &-0 {
//     @include margin($string, 0);
//   }
//   &-1 {
//     @include margin($string, 1);
//   }
//   &-2 {
//     @include margin($string, 2);
//   }
//   &-3 {
//     @include margin($string, 3);
//   }
//   &-4 {
//     @include margin($string, 4);
//   }
//   &-5 {
//     @include margin($string, 5);
//   }
//   &-auto {
//     @include margin($string, auto);
//   }
// }

// @mixin margin_style {
//   @include margin-("");
//   &t {
//     @include margin-(top);
//   }
//   &r {
//     @include margin-(right);
//   }
//   &b {
//     @include margin-(bottom);
//   }
//   &l {
//     @include margin-(left);
//   }
//   &x {
//     @include margin-(x);
//   }
//   &y {
//     @include margin-(y);
//   }
// }

// @mixin g-m {
//   .m {
//     @include margin_style();
//   }
//   @each $key in $media_list {
//     @include rwd($key) {
//       @at-root .#{$key}\: {
//         &m {
//           @include margin_style();
//         }
//       }
//     }
//   }
// }

// @include

// display
@include g-d;

// // flex
@include g-flex;

// // float
@include g-float;

// // text-align
@include g-text;

// // max-width
@include g-max-w;

// // size
@include g-size;
